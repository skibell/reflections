What happens when you initialize a repository? Why do you need to do it?

A new .git folder is created that will keep track of all the changes of the repository, it is needed to maintain an order f changes to them.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Allows the user to have a working directory to make the needed changes to files before commiting

How can you use the staging area to make sure you have one commit per logical change?

By adding one file at a time after making changes we could make sure the change is logged.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When making a parallel version of the files we're working on and don't want to disturb the main branch

How do the diagrams help you visualize the branch structure?

By following the parent of the most recent commit back to the first one we have a visual clue of their relationship. We can also see the relations with the other branches.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A bigger branch with changes from both branches, the way is represented is correct because it shows the parent commits each one has had in the past.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

When merging automatically git gives us some visual clues about the changes that were introduced to the code, clearly separating the master, the previous and the most recent change to it. Meanwhile, merging manually lets us compare the code that was added and subtracted at once with diff and then opening the actual file and making the change.